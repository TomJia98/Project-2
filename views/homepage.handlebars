<!--print the shared post,if there's any, with the edit option available, while display a message to request the first post otherwise-->

      <div id="new-post"></div>
{{#each posts as |post|}}
   <div>
      {{> post-info post }}
   </div>
{{/each}}


<script>

   var host = location.origin.replace(/^http/, 'ws');
   var ws = new WebSocket(host);

   function formatDate(date){
      return `${new Date(date).getMonth() + 1}/${new Date(
         date
      ).getDate()}/${new Date(date).getFullYear()}`;
   }

   ws.onmessage = function (message) {
      const recievedData = message.data;
      console.log(recievedData);

      const readdata = function(){
         const post = JSON.parse(recievedData);
         console.log(post);
         document.getElementById('new-post').innerHTML = document.getElementById('new-post').innerHTML +

         `<div class="card mb-6">
   <header class="card-header card-header-title has-background-grey-lighter">
      
         <div class="column">
               <p class=" has-text-primary-light"></p>
         <a href="/post/${post.id}"  class="has-text-black is-capitalized is-pulled-left">${post.title} </a></p>
         </div>

         <div class="column">
         <span class=""> </span>
         </div>
      
   </header>

      <div class="card-content">
         <div class="content has-text-justified">
               ${post.post_content}
         </div>
         <div class="is-pulled-left">
            </p><a class="like-react" data-id=${post.id}>0 üçå</a><a class="dislike-react" data-id=${post.id}>0 üöú</a>
            </div>

               <div class="is-pulled-right">
                  {{!-- TODO: find out why created at is in camel case?? --}}
                  <b>${post.user.username}</b> |
                  ${formatDate(post.createdAt)}</a> |  
                  <a href="/post/${post.id}"> 
                  <b>${post.comments.length} comments</b></a>
               </div>
         
      </div>`

      }

      readdata();
   //const dataFromServer = JSON.parse(message.data);
   // use document to add posts
      
      // newpost.innerHTML = reader.readAsText(recievedData);
   };
</script>
   {{!-- $`
   <div class="card mb-6">
  <header class="card-header card-header-title has-background-grey-lighter">
    
        <div class="column">
            <p class=" has-text-primary-light"></p>
      <a href="/post/${post.id}"  class="has-text-black is-capitalized is-pulled-left">${title} </a></p>
      </div>

      <div class="column">
      <span class=""> </span>
      </div>
    
  </header>

    <div class="card-content">
        <div class="content has-text-justified">
            /${post.post_content}
        </div>
            <div class="is-pulled-right">
                <b>${user.username}</b> | 
                ${format_date created_at} | <a href="/post/${id}">${comments.length} ${format_plural "comment" comments.length}</a>
            </div>
        
    </div>
   ` --}}